<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
    <PackageVersion>1.0.0.0</PackageVersion>
    <Title>Component.As.Service : Serves your Component. On the web. As a Service.</Title>
    <PackageDescription><![CDATA[Add Component.As.Service to your AspNetCore app in the usual way and behold as your application component is exposed to the world at `http://localhost:5000/MyApplicationComponent/MethodName?parameterA=a&parameterB=B`
```
public class Startup
{
    public void ConfigureServices(IServiceCollection services)
    {
        services
            /*  .AddMvc() here if you required MvcOptions */
            .AddComponentAsService();
    }

    public void Configure(IApplicationBuilder app, IHostingEnvironment env)
    {
        app
           /* .UseMvc() here if you require custom Mvc configuration */
           .UseComponentAsService<MyApplicationComponent>();
    }
}
```
### Q&A

* And form post and json post and complex objects?
Yes. Anything that Mvc can normally deliver to an Action by the magic of ModelBinding will
be delivered to your component method.

* What about Route Constraints and REST and things?
For sophisticated HTTP-specific concerns, write a traditional MVC Controller which
takes your Component as a dependency.

* Really?
Yes really. This is very much a 'Keep it Simple' offer.
]]></PackageDescription>
    <PackageReleaseNotes>ChangeLog
      --------
      1.0.0.0 Component.As.Service
    </PackageReleaseNotes>
    <Copyright>(c) Chris F. Carroll, 2018</Copyright>
    <Authors>Chris F Carroll</Authors>
    <Owners>Chris F Carroll</Owners>
    <PackageProjectUrl>https://github.com/chrisfcarroll/ComponentAsService</PackageProjectUrl>
    <RepositoryUrl>https://github.com/chrisfcarroll/ComponentAsService</RepositoryUrl>
    <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
    <IncludeSymbols>true</IncludeSymbols>
    <PackageTags>aspnetcore;aspnetcoremvc;debugging;routing;logging</PackageTags>  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.1.3" />
  </ItemGroup>

</Project>
